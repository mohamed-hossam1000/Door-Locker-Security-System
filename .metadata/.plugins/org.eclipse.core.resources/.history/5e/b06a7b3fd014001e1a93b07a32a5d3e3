 /******************************************************************************
 *
 * Project : Smart Lock
 *
 * File Name: MCU_1.c
 *
 * Description: Human machine interface for Smart Lock
 *
 * Author: Mohamed Hossam
 *
 *******************************************************************************/

#include<avr/io.h>
#include"keypad.h"
#include"lcd.h"
#include"timer1.h"
#include"uart.h"

#define ENTER '='
#define UNMATCHED_PASSWORDS 10
#define MATCHED_PASSWORDS 0
#define SET_PASSWORD 20

uint8 setPassword();

int main()
{
	/* a variable to store UART configuration */
	UART_ConfigType UART_config;
	/* UART configuration and initialization */
	UART_config.baudRate = 9600;
	UART_config.character_size = EIGHT_BITS;
	UART_config.parity = DISABLED;
	UART_config.stop_bits = ONE_BIT;
	UART_init(&UART_config);
	LCD_init();
	/* enable global interrupt */
	SREG|=(1<<7);

	while(setPassword() == UNMATCHED_PASSWORDS);
	LCD_clearScreen();
	LCD_displayString("good");
	for(;;)
	{

	}
}

uint8 setPassword()
{
	/* a variable to store pressed key */
	uint8 key;
	/* a variable to store the password */
	uint8 pass[5];
	/* a variable to store the re_entered password */
	uint8 rePass[5];
	/* loop variable */
	uint8 i;
	/* ask the user for password */
	LCD_displayString("plz enter pass: ");
	LCD_moveCursor(1, 0);
	/* get 5 digits password through keypad */
	for(i=0; i<5; i++)
	{
		key = KEYPAD_getPressedKey();
		pass[i] = key;
		LCD_displayCharacter('*');
	}
	/* wait for user to press enter */
	while(KEYPAD_getPressedKey() != ENTER);
	/* clear screen and ask the user to re_enter password */
	LCD_clearScreen();
	LCD_displayString("plz re_enter the");
	LCD_displayStringRowColumn(1, 0, "same pass: ");
	/* get 5 digits password through keypad */
	for(i=0; i<5; i++)
	{
		key = KEYPAD_getPressedKey();
		rePass[i] = key;
		LCD_displayCharacter('*');
	}
	/* wait for user to press enter */
	while(KEYPAD_getPressedKey() != ENTER);

//	/* send a predefined character that indicates to the second MCU
//	 * the operation is setting a new password */
//	UART_sendByte(SET_PASSWORD);
//	/* send the two passwords */
//	for(i=0; i<5; i++)
//	{
//		UART_sendByte(pass[i]);
//	}
//	for(i=0; i<5; i++)
//	{
//		UART_sendByte(rePass[i]);
//	}
//
//	/* receive MCU2 response whether the two passwords match or not */
//	return UART_receiveByte();
	/* check if the passwords match */
	for(i=0; i<5; i++)
	{
		if(pass[i] != rePass[i])
		{
			return UNMATCHED_PASSWORDS;
		}
	}
	return MATCHED_PASSWORDS;
}
